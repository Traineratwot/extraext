{"version":3,"names":[],"mappings":"","sources":["assets/components/extraext/js/grid/editor.min.js"],"sourcesContent":["\nextraExt.grid.editor={}\nextraExt.grid.editor.xtype='extraExt-grid-editor'\nextraExt.requireConfigField[extraExt.grid.editor.xtype]=['action','url','fields',]\nextraExt.xTypes[extraExt.grid.editor.xtype]=function(config){config=config||{}\nvar requireConfigField=extraExt.requireConfigField[this.xtype||config.xtype].slice()\nvar errorConfig=[]\nvar warnConfig=[]\nvar table=config.table\nvar row=config.table\nvar columns=config.columns\nvar type=config.type||'add'\nvar ident=`extraExt-grid-editor_${type}_${row.id}_${Ext.id()}`\nvar _updateData={}\nvar fields=[]\nconfig.url=table.url\nconfig.requestDataType=table.requestDataType\nswitch(type){case'add':config.action=table.create_action\nbreak\ndefault:for(const fieldKey in table.fields){if(table.fields.hasOwnProperty(fieldKey)){const field=table.fields[fieldKey]\n_updateData[field]=null}}\nconfig.updateData=Object.assign(_updateData,config.updateData)\nconfig.action=table.save_action\nbreak}\nfor(const colKey in table.colModel.lookup){if(table.colModel.lookup.hasOwnProperty(colKey)){const col=table.colModel.lookup[colKey]\nvar xtype='hidden'\nvar editor={table:table,changeable:true,visible:true,xtype:'textfield',name:col.dataIndex,fieldLabel:col.header,id:`${col.dataIndex}_${type}_${ident}`,anchor:'99%',allowBlank:true,}\nif(col.hasOwnProperty('renderer')){if(col.renderer instanceof Function)\nswitch(col.renderer.name){case'BOOL':editor.xtype='combo-boolean'\nbreak\ncase'PHP':case'JSON':case'CSS':case'JS':case'SQL':editor.xtype='textarea'\nbreak}}\nif(col.hasOwnProperty('extraExtEditor')){editor=Object.assign(editor,col.extraExtEditor)\nif(editor.visible==false){editor.xtype='hidden'}\nif(col.extraExtEditor.hasOwnProperty('defaultValue')){editor.value=col.extraExtEditor.defaultValue}}\nif(config.hasOwnProperty('updateData')&&config.updateData.hasOwnProperty(col.dataIndex)){editor.value=config.updateData[col.dataIndex]}\nif(extraExt.requireConfigField.hasOwnProperty(editor.xtype)){for(const key of extraExt.requireConfigField[editor.xtype]){if(editor.hasOwnProperty(key)){if(!extraExt.empty(editor[key])){warnConfig.push(editor.xtype+'.'+key)}}else{warnConfig.push(editor.xtype+'.'+key)}}\nif(warnConfig.length>0){console.warn(`ExtraExt: not set required config [${this.xtype || config.xtype}]`,warnConfig)}}\nfields.push(editor)}}\nObject.assign({},config)\nconfig.fields=fields\nconfig.closeAction='close'\nconfig.listeners={beforeSubmit:function(send_data){return true},success:function(){MODx.msg.status({title:_('extraExt.'+type),message:_('extraExt.html.success'),delay:3})\nExt.getCmp(this.table.id).refresh()\nthis.remove()},failure:function(){MODx.msg.status({title:_('extraExt.'+type),message:_('extraExt.html.failure'),delay:3})\nExt.getCmp(this.table.id).refresh()\nthis.remove()},}\nExt.applyIf(config,{title:`${_('extraExt.create')} `,closeAction:'close',requestDataType:'default',id:ident,saveBtnText:_('extraExt.save'),width:(window.innerWidth/100)*50,})\nconsole.log(this)\nfor(const key of requireConfigField){if(config.hasOwnProperty(key)){if(extraExt.empty(config[key])){errorConfig.push(key)}}else{errorConfig.push(key)}}\nif(errorConfig.length>0){console.error(`ExtraExt: invalid required config [${this.xtype || config.xtype}]`,errorConfig)\nreturn false}\nextraExt.xTypes[extraExt.grid.editor.xtype].superclass.constructor.call(this,config)\nconsole.log(this.fp)\nif(this.hasOwnProperty('requestDataType')){this.fp.getForm().requestDataType=this.requestDataType}\nthis.fp.getForm().doAction=function(b,a){if(b=='submit'&&this.requestDataType=='json'){if(Ext.isString(b)){b=new extraExt.inputs.Submit(this,a)}\nif(this.fireEvent('beforeaction',this,b)!==false){this.beforeAction(b)\nb.run.defer(100,b)}\nreturn this}\nif(Ext.isString(b)){b=new Ext.form.Action.ACTION_TYPES[b](this,a)}\nif(this.fireEvent('beforeaction',this,b)!==false){this.beforeAction(b)\nb.run.defer(100,b)}\nreturn this}}\nExt.extend(extraExt.xTypes[extraExt.grid.editor.xtype],MODx.Window)\nExt.reg(extraExt.grid.editor.xtype,extraExt.xTypes[extraExt.grid.editor.xtype])\n//# sourceMappingURL=editor.min.js.map\n"],"file":"editor.min.js"}