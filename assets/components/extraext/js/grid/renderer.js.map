{"version":3,"names":[],"mappings":"","sources":["assets/components/extraext/js/grid/renderer.js"],"sourcesContent":["extraExt.classes.grid.renderers = class extends extraExt.classes.util.renderers {\n\tentityMap = {\n\t\t'&': '&amp;',\n\t\t'<': '&lt;',\n\t\t'>': '&gt;',\n\t\t'\"': '&quot;',\n\t\t'\\'': '&#39;',\n\t\t'/': '&#x2F;',\n\t\t'`': '&#x60;',\n\t\t'=': '&#x3D;'\n\t}\n\teventData = {}\n\n\tpopUp(e) {\n\t\tvar data = extraExt.grid.renderers.eventData[e.dataset.eventdata]\n\t\tvar value = data.meta.rawValue\n\n\t\tvalue = this.bodyPrepare(data.meta.type,value,data.config.preRenderer,[data.th, data.rawValue, data.cell, data.row, data.x, data.y, data.table])\n\n\t\te.setAttribute('data-active', true)\n\t\tthis.Window(data.th.header, value, this.popUpCallback, {\n\t\t\telem: e,\n\t\t\tconfig: data,\n\t\t})\n\t}\n\n\n\tpopUpCallback(e) {\n\t\tthis.elem.setAttribute('data-active', false)\n\t}\n\n\n\tjsonBeautify(val) {\n\t\ttry {\n\t\t\tvar jsObj = JSON.parse(val)\n\t\t\treturn JSON.stringify(jsObj, null, '\\t')\n\t\t} catch(e) {\n\t\t\treturn val\n\t\t}\n\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t * @param meta {object}\n\t */\n\tdefault(val, cell, row, y, x, table, meta = {}) {\n\t\tvar config = this.extraExtRenderer || {}\n\t\tconfig = Object.assign({\n\t\t\theight: window.innerHeight / 100 * 80,\n\t\t\twidth: window.innerWidth,\n\t\t\tpopup: false,\n\t\t\tpreRenderer: (val, cell, row, y, x, table) => {\n\t\t\t\treturn extraExt.empty(val) ? '<span class=\"false\">' + _('ext_emptygroup') + '<span>' : val\n\t\t\t},\n\t\t}, config)\n\t\tmeta = Object.assign({\n\t\t\ttype: 'default',\n\t\t\trawValue: val\n\t\t}, meta)\n\t\tif(meta.type === 'default') {\n\t\t\tvar rawValue = val\n\t\t} else {\n\t\t\tvar rawValue = meta.rawValue\n\t\t}\n\t\tvar out = val\n\t\tif(config.preRenderer) {\n\t\t\tout = config.preRenderer.call(this, val, cell, row, y, x, table)\n\t\t}\n\t\tif(config.popup == true && val) {\n\t\t\tvar id = Math.random().toString(36).slice(5)\n\t\t\textraExt.grid.renderers.eventData[id] = {\n\t\t\t\tth: this,\n\t\t\t\tval: val,\n\t\t\t\trawValue: rawValue,\n\t\t\t\tconfig: config,\n\t\t\t\tcell: cell,\n\t\t\t\trow: row,\n\t\t\t\ty: y,\n\t\t\t\tx: x,\n\t\t\t\ttable: table,\n\t\t\t\tmeta: meta,\n\t\t\t}\n\t\t\tout = `<div class=\"extraExt_renderers\">\n\t\t\t\t<span class=\"extraExt_renderers_open\" data-eventdata=\"${id}\" onclick=\"extraExt.grid.renderers.popUp(this)\">\n\t\t\t\t\t<svg class=\"extraExt_popup\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Popup\" x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\" xml:space=\"preserve\">\n\t\t\t\t\t\t<path d=\"M16 2H7.979C6.88 2 6 2.88 6 3.98V12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 10H8V4h8v8zM4 10H2v6c0 1.1.9 2 2 2h6v-2H4v-6z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t\t<div class=\"extraExt_renderers_body\">\n\t\t\t\t\t${out}\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t} else {\n\t\t\tout = `<div class=\"extraExt_renderers\">\n\t\t\t\t<div class=\"extraExt_renderers_body\">\n\t\t\t\t\t${out}\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t}\n\t\treturn out\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tHTML(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tif(val) {\n\t\t\tvar out = null\n\t\t\ttry {\n\t\t\t\tout = hljs.highlight('xml', val).value\n\t\t\t} catch(e) {\n\t\t\t\tout = '<code> ' + escapeHtml(defaultRenderer(val)) + ' </code>'\n\t\t\t}\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'HTML',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tPHP(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tif(val) {\n\t\t\tvar out = null\n\t\t\ttry {\n\t\t\t\tout = hljs.highlight('php', val).value\n\t\t\t} catch(e) {\n\t\t\t\tout = '<code> ' + escapeHtml(defaultRenderer(val)) + ' </code>'\n\t\t\t}\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'PHP',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tJS(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tif(val) {\n\t\t\tvar out = null\n\t\t\ttry {\n\t\t\t\tout = hljs.highlight('javascript', val).value\n\t\t\t} catch(e) {\n\t\t\t\tout = '<code> ' + escapeHtml(defaultRenderer(val)) + ' </code>'\n\t\t\t}\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'JS',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tSQL(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tif(val) {\n\t\t\tvar out = null\n\t\t\ttry {\n\t\t\t\tout = hljs.highlight('sql', val).value\n\t\t\t} catch(e) {\n\t\t\t\tout = '<code> ' + escapeHtml(defaultRenderer(val)) + ' </code>'\n\t\t\t}\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'SQL',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tCSS(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tif(val) {\n\t\t\tvar out = null\n\t\t\ttry {\n\t\t\t\tout = hljs.highlight('css', val).value\n\t\t\t} catch(e) {\n\t\t\t\tout = '<code> ' + escapeHtml(defaultRenderer(val)) + ' </code>'\n\t\t\t}\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'CSS',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tPYTHON(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tif(val) {\n\t\t\tvar out = null\n\t\t\ttry {\n\t\t\t\tout = hljs.highlight('python', val).value\n\t\t\t} catch(e) {\n\t\t\t\tout = '<code> ' + escapeHtml(defaultRenderer(val)) + ' </code>'\n\t\t\t}\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'PYTHON',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tJSON(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tif(val) {\n\t\t\tvar out = null\n\t\t\ttry {\n\t\t\t\tout = hljs.highlight('json', val).value\n\t\t\t} catch(e) {\n\t\t\t\tout = `<pre><code class=\"language-json\">${val}</code></pre>`\n\t\t\t}\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'JSON',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tBOOL(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tvar out = val\n\t\tif(val === null) {\n\t\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {type: 'BOOL'})\n\t\t}\n\t\tif(val === false || val === 'false' || val === 0 || val === '0') {\n\t\t\tout = `<span class=\"false\">${_('no')}</span>`\n\t\t} else if(val === true || val === 'true' || val === 1 || val === '1') {\n\t\t\tout = `<span class=\"true\">${_('yes')}</span>`\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'BOOL',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tCHECKBOX(val, cell, row, y, x, table) {\n\t\tvar rawValue = val\n\t\tvar out = val\n\t\tvar id = Ext.id()\n\t\tif(val === null) {\n\t\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {type: 'BOOL'})\n\t\t}\n\t\tif(val === false || val === 'false' || val === 0 || val === '0') {\n\t\t\tout = `<div class=\"x-form-check-wrap\" style=\"width: 100%; height: 18px;\"><input type=\"checkbox\" disabled autocomplete=\"off\" id=\"${id}\" name=\"\" class=\" x-form-checkbox x-form-field\"><label for=\"${id}\" class=\"x-form-cb-label\">&nbsp;</label></div>`\n\t\t} else if(val === true || val === 'true' || val === 1 || val === '1') {\n\t\t\tout = `<div class=\"x-form-check-wrap\" style=\"width: 100%; height: 18px;\"><input type=\"checkbox\" disabled autocomplete=\"off\" id=\"${id}\" name=\"\" class=\" x-form-checkbox x-form-field\" checked=\"true\"><label for=\"${id}\" class=\"x-form-cb-label\">&nbsp;</label></div>`\n\t\t}\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'CHECKBOX',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n\n\n\t/**\n\t * @author Traineratwot\n\t * @param val {string}\n\t * @param cell {object}\n\t * @param row {object}\n\t * @param y {int}\n\t * @param x {int}\n\t * @param table {object}\n\t */\n\tRADIO(val, cell, row, y, x, table) {\n\t\t// console.debug(table)\n\t\t// console.debug(this)\n\t\tvar values = []\n\t\tfor(const itemsKey in table.data.items) {\n\t\t\tif(table?.data?.items.hasOwnProperty(itemsKey)) {\n\t\t\t\tif(table?.data?.items[itemsKey]?.data.hasOwnProperty(this.dataIndex)) {\n\t\t\t\t\tvalues.push(table?.data?.items[itemsKey]?.data[this.dataIndex])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar rawValue = val\n\t\tvar out = val\n\t\tif(val === null) {\n\t\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {type: 'BOOL'})\n\t\t}\n\t\tout = `<div class=\"x-form-check-wrap\" style=\"width: 100%; height: 18px;\">`\n\t\tvalues = extraExt.uniqueArray(values)\n\t\tvalues.forEach((e) => {\n\t\t\tvar id = Ext.id()\n\t\t\tif(val != e) {\n\t\t\t\tout += `<input type=\"radio\" autocomplete=\"off\" disabled id=\"${id}\" name=\"\" class=\" x-form-radio x-form-field\">\n\t\t\t\t\t<label for=\"${id}\" class=\"x-form-cb-label\">${e}&nbsp;</label>\n\t\t\t\t\t<br>`\n\t\t\t} else {\n\t\t\t\tout += `<input type=\"radio\" autocomplete=\"off\" disabled id=\"${id}\" name=\"\" class=\" x-form-radio x-form-field\" checked=\"true\">\n\t\t\t\t\t<label for=\"${id}\" class=\"x-form-cb-label\">${e}&nbsp;</label>\n\t\t\t\t\t<br>`\n\t\t\t}\n\t\t})\n\t\tout += `</div>`\n\t\treturn extraExt.grid.renderers.default.call(this, out || val, cell, row, y, x, table, {\n\t\t\ttype: 'RADIO',\n\t\t\trawValue: rawValue\n\t\t})\n\t}\n}\n/**\n * @author Traineratwot\n * @see default\n * @see HTML\n * @see PHP\n * @see JS\n * @see SQL\n * @see CSS\n * @see PYTHON\n * @see JSON\n * @see BOOL\n * @see CHECKBOX\n * @see RADIO\n */\nextraExt.grid.renderers = new extraExt.classes.grid.renderers()\n\n\n//# sourceMappingURL=renderer.js.map\n"],"file":"renderer.js"}