{"version":3,"names":[],"mappings":"","sources":["assets/components/extraext/js/util.js"],"sourcesContent":["extraExt.classes.util = {}\nextraExt.util = {}\nextraExt.util.renderer = {}\nextraExt.classes.util.renderers = class {\n\t/**\n\t * @param {string} title\n\t * @param {string} body\n\t * @param {extraExt.classes.grid.renderers.popUpCallback} Callback\n\t * @param {{elem: *}} data\n\t */\n\tWindow(title, body, Callback = () => {}, data) {\n\t\tdata = Object.assign({\n\t\t\tconfig: {\n\t\t\t\tconfig: {}\n\t\t\t}\n\t\t}, data)\n\t\tvar _tmp = Ext.id()\n\t\tvar msg = `<div class=\"extraExt_renderers_window_body\" data-wrap=\"true\">\n\t\t\t\t\t<input id=\"${_tmp}\" type=\"checkbox\" checked onchange=\"document.querySelector('.extraExt_renderers_window_body').setAttribute('data-wrap',this.checked.toString())\">\n\t\t\t\t\t<label for=\"${_tmp}\">${_('extraExt.enable.disable')} ${_('extraExt.wrap')}</label>\n\t\t\t\t\t<pre>${body}</pre>\n\t\t\t</div>`\n\t\tExt.MessageBox.show(Ext.apply({\n\t\t\ttitle: title,\n\t\t\tresize: true,\n\t\t\tmsg: msg,\n\t\t\tbuttons: {yes: true},\n\t\t\tfn: Callback,\n\t\t\tscope: data,\n\t\t\ticon: ''\n\t\t}, data.config.config))\n\t}\n\n\n\tbodyPrepare(type, value, def = false, data = []) {\n\t\tswitch( type ) {\n\t\t\tcase 'JSON':\n\t\t\t\tvalue = this.jsonBeautify(value)\n\t\t\t\ttry {\n\t\t\t\t\tvalue = hljs.highlight('json', value).value\n\t\t\t\t} catch(e) {\n\t\t\t\t\tvalue = `<pre><code class=\"language-json\">${value}</code></pre>`\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'HTML':\n\t\t\t\ttry {\n\t\t\t\t\tvalue = html_beautify(value)\n\t\t\t\t\tvalue = hljs.highlight('xml', value).value\n\t\t\t\t} catch(e) {\n\t\t\t\t\tvalue = `<pre><code class=\"language-xml\">${value}</code></pre>`\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'PHP':\n\t\t\t\ttry {\n\t\t\t\t\tvalue = hljs.highlight('php', value).value\n\t\t\t\t} catch(e) {\n\t\t\t\t\tvalue = `<pre><code class=\"language-php\">${value}</code></pre>`\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'JS':\n\t\t\t\ttry {\n\t\t\t\t\tvalue = js_beautify(value)\n\t\t\t\t\tvalue = hljs.highlight('js', value).value\n\t\t\t\t} catch(e) {\n\t\t\t\t\tvalue = `<pre><code class=\"language-js\">${value}</code></pre>`\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'SQL':\n\t\t\t\ttry {\n\t\t\t\t\tvalue = hljs.highlight('sql', value).value\n\t\t\t\t} catch(e) {\n\t\t\t\t\tvalue = `<pre><code class=\"language-sql\">${value}</code></pre>`\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'CSS':\n\t\t\t\ttry {\n\t\t\t\t\tvalue = css_beautify(value)\n\t\t\t\t\tvalue = hljs.highlight('css', value).value\n\t\t\t\t} catch(e) {\n\t\t\t\t\tvalue = `<pre><code class=\"language-css\">${value}</code></pre>`\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'PYTHON':\n\t\t\t\ttry {\n\t\t\t\t\tvalue = hljs.highlight('python', value).value\n\t\t\t\t} catch(e) {\n\t\t\t\t\tvalue = `<pre><code class=\"language-python\">${value}</code></pre>`\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tif(def) {\n\t\t\t\t\tvalue = def.call(...data)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t}\n\t\treturn value\n\t}\n\n\n\topenPopup(title, value, type = false) {\n\t\tvalue = this.bodyPrepare(type, value)\n\t\tthis.Window(title, value)\n\t}\n}\nextraExt.util.renderer = new extraExt.classes.util.renderers\n//# sourceMappingURL=util.js.map\n"],"file":"util.js"}